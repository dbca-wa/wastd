# Generated by Django 3.2.21 on 2023-12-01 06:13

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='TrtActivities',
            fields=[
                ('activity_code', models.CharField(db_column='ACTIVITY_CODE', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('nesting', models.CharField(db_column='NESTING', max_length=50)),
                ('new_code', models.CharField(blank=True, db_column='New_Code', max_length=255, null=True)),
                ('display_observation', models.BooleanField(db_column='Display_Observation')),
            ],
            options={
                'db_table': 'TRT_ACTIVITIES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtBeachPositions',
            fields=[
                ('beach_position_code', models.CharField(db_column='BEACH_POSITION_CODE', max_length=2, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('new_code', models.CharField(blank=True, db_column='New_Code', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_BEACH_POSITIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtBodyParts',
            fields=[
                ('body_part', models.CharField(db_column='BODY_PART', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('flipper', models.BooleanField(db_column='FLIPPER')),
            ],
            options={
                'db_table': 'TRT_BODY_PARTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtCauseOfDeath',
            fields=[
                ('cause_of_death', models.CharField(db_column='CAUSE_OF_DEATH', max_length=2, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_CAUSE_OF_DEATH',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtConditionCodes',
            fields=[
                ('condition_code', models.CharField(db_column='CONDITION_CODE', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_CONDITION_CODES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDamageCause',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('observation_id', models.IntegerField(db_column='OBSERVATION_ID')),
                ('body_part', models.CharField(db_column='BODY_PART', max_length=1)),
                ('damage_code', models.CharField(db_column='DAMAGE_CODE', max_length=1)),
                ('damage_cause_code', models.CharField(blank=True, db_column='DAMAGE_CAUSE_CODE', max_length=2, null=True)),
            ],
            options={
                'db_table': 'TRT_DAMAGE_CAUSE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDamageCauseCodes',
            fields=[
                ('damage_cause_code', models.CharField(db_column='DAMAGE_CAUSE_CODE', max_length=2, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_DAMAGE_CAUSE_CODES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDamageCodes',
            fields=[
                ('damage_code', models.CharField(db_column='DAMAGE_CODE', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('flipper', models.BooleanField(db_column='FLIPPER')),
            ],
            options={
                'db_table': 'TRT_DAMAGE_CODES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDataChanged',
            fields=[
                ('trt_data_changed_id', models.AutoField(db_column='TRT_DATA_CHANGED_ID', primary_key=True, serialize=False)),
                ('datachanged_date', models.DateTimeField(blank=True, db_column='DATACHANGED_DATE', null=True)),
                ('datachangedby', models.CharField(blank=True, db_column='DATACHANGEDBY', max_length=255, null=True)),
                ('comment', models.CharField(blank=True, db_column='COMMENT', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_DATA_CHANGED',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDataEntry',
            fields=[
                ('data_entry_id', models.AutoField(db_column='DATA_ENTRY_ID', primary_key=True, serialize=False)),
                ('user_entry_id', models.IntegerField(db_column='USER_ENTRY_ID')),
                ('turtle_id', models.IntegerField(blank=True, db_column='TURTLE_ID', null=True)),
                ('observation_id', models.IntegerField(blank=True, db_column='OBSERVATION_ID', null=True)),
                ('do_not_process', models.BooleanField(db_column='DO_NOT_PROCESS')),
                ('recapture_left_tag_id', models.CharField(blank=True, db_column='RECAPTURE_LEFT_TAG_ID', max_length=10, null=True)),
                ('recapture_left_tag_id_2', models.CharField(blank=True, db_column='RECAPTURE_LEFT_TAG_ID_2', max_length=10, null=True)),
                ('recapture_right_tag_id', models.CharField(blank=True, db_column='RECAPTURE_RIGHT_TAG_ID', max_length=10, null=True)),
                ('recapture_right_tag_id_2', models.CharField(blank=True, db_column='RECAPTURE_RIGHT_TAG_ID_2', max_length=10, null=True)),
                ('recapture_pit_tag_id', models.CharField(blank=True, db_column='RECAPTURE_PIT_TAG_ID', max_length=50, null=True)),
                ('other_left_tag', models.CharField(blank=True, db_column='OTHER_LEFT_TAG', max_length=2, null=True)),
                ('other_right_tag', models.CharField(blank=True, db_column='OTHER_RIGHT_TAG', max_length=2, null=True)),
                ('new_left_tag_id', models.CharField(blank=True, db_column='NEW_LEFT_TAG_ID', max_length=10, null=True)),
                ('new_left_tag_id_2', models.CharField(blank=True, db_column='NEW_LEFT_TAG_ID_2', max_length=10, null=True)),
                ('new_right_tag_id', models.CharField(blank=True, db_column='NEW_RIGHT_TAG_ID', max_length=10, null=True)),
                ('new_right_tag_id_2', models.CharField(blank=True, db_column='NEW_RIGHT_TAG_ID_2', max_length=10, null=True)),
                ('new_pit_tag_id', models.CharField(blank=True, db_column='NEW_PIT_TAG_ID', max_length=50, null=True)),
                ('alive', models.CharField(blank=True, db_column='ALIVE', max_length=1, null=True)),
                ('place_code', models.CharField(blank=True, db_column='PLACE_CODE', max_length=4, null=True)),
                ('observation_date', models.DateTimeField(blank=True, db_column='OBSERVATION_DATE', null=True)),
                ('observation_time', models.DateTimeField(blank=True, db_column='OBSERVATION_TIME', null=True)),
                ('nesting', models.CharField(blank=True, db_column='NESTING', max_length=1, null=True)),
                ('species_code', models.CharField(blank=True, db_column='SPECIES_CODE', max_length=2, null=True)),
                ('identification_confidence', models.CharField(blank=True, db_column='IDENTIFICATION_CONFIDENCE', max_length=1, null=True)),
                ('sex', models.CharField(blank=True, db_column='SEX', max_length=1, null=True)),
                ('curved_carapace_length', models.IntegerField(blank=True, db_column='CURVED_CARAPACE_LENGTH', null=True)),
                ('curved_carapace_width', models.IntegerField(blank=True, db_column='CURVED_CARAPACE_WIDTH', null=True)),
                ('activity_code', models.CharField(blank=True, db_column='ACTIVITY_CODE', max_length=1, null=True)),
                ('beach_position_code', models.CharField(blank=True, db_column='BEACH_POSITION_CODE', max_length=2, null=True)),
                ('damage_carapace', models.CharField(blank=True, db_column='DAMAGE_CARAPACE', max_length=1, null=True)),
                ('damage_lff', models.CharField(blank=True, db_column='DAMAGE_LFF', max_length=1, null=True)),
                ('damage_rff', models.CharField(blank=True, db_column='DAMAGE_RFF', max_length=1, null=True)),
                ('damage_lhf', models.CharField(blank=True, db_column='DAMAGE_LHF', max_length=1, null=True)),
                ('damage_rhf', models.CharField(blank=True, db_column='DAMAGE_RHF', max_length=1, null=True)),
                ('body_part_1', models.CharField(blank=True, db_column='BODY_PART_1', max_length=1, null=True)),
                ('damage_code_1', models.CharField(blank=True, db_column='DAMAGE_CODE_1', max_length=1, null=True)),
                ('body_part_2', models.CharField(blank=True, db_column='BODY_PART_2', max_length=1, null=True)),
                ('damage_code_2', models.CharField(blank=True, db_column='DAMAGE_CODE_2', max_length=1, null=True)),
                ('egg_count', models.IntegerField(blank=True, db_column='EGG_COUNT', null=True)),
                ('egg_count_method', models.CharField(blank=True, db_column='EGG_COUNT_METHOD', max_length=3, null=True)),
                ('clutch_completed', models.CharField(blank=True, db_column='CLUTCH_COMPLETED', max_length=1, null=True)),
                ('measured_by', models.CharField(blank=True, db_column='MEASURED_BY', max_length=50, null=True)),
                ('recorded_by', models.CharField(blank=True, db_column='RECORDED_BY', max_length=50, null=True)),
                ('tagged_by', models.CharField(blank=True, db_column='TAGGED_BY', max_length=50, null=True)),
                ('entered_by', models.CharField(blank=True, db_column='ENTERED_BY', max_length=50, null=True)),
                ('measured_recorded_by', models.CharField(blank=True, db_column='MEASURED_RECORDED_BY', max_length=50, null=True)),
                ('measurement_type_1', models.CharField(blank=True, db_column='MEASUREMENT_TYPE_1', max_length=10, null=True)),
                ('measurement_value_1', models.FloatField(blank=True, db_column='MEASUREMENT_VALUE_1', null=True)),
                ('measurement_type_2', models.CharField(blank=True, db_column='MEASUREMENT_TYPE_2', max_length=10, null=True)),
                ('measurement_value_2', models.FloatField(blank=True, db_column='MEASUREMENT_VALUE_2', null=True)),
                ('datum_code', models.CharField(blank=True, db_column='DATUM_CODE', max_length=5, null=True)),
                ('zone', models.IntegerField(blank=True, db_column='ZONE', null=True)),
                ('easting', models.FloatField(blank=True, db_column='EASTING', null=True)),
                ('northing', models.FloatField(blank=True, db_column='NORTHING', null=True)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('latitude_degrees', models.IntegerField(blank=True, db_column='LATITUDE_DEGREES', null=True)),
                ('latitude_minutes', models.FloatField(blank=True, db_column='LATITUDE_MINUTES', null=True)),
                ('latitude_seconds', models.FloatField(blank=True, db_column='LATITUDE_SECONDS', null=True)),
                ('longitude_degrees', models.IntegerField(blank=True, db_column='LONGITUDE_DEGREES', null=True)),
                ('longitude_minutes', models.FloatField(blank=True, db_column='LONGITUDE_MINUTES', null=True)),
                ('longitude_seconds', models.FloatField(blank=True, db_column='LONGITUDE_SECONDS', null=True)),
                ('identification_type', models.CharField(blank=True, db_column='IDENTIFICATION_TYPE', max_length=10, null=True)),
                ('identifier', models.CharField(blank=True, db_column='IDENTIFIER', max_length=20, null=True)),
                ('comment_fromrecordedtagstable', models.CharField(blank=True, db_column='COMMENT_FROMRECORDEDTAGSTABLE', max_length=255, null=True)),
                ('scars_left', models.BooleanField(db_column='SCARS_LEFT')),
                ('scars_right', models.BooleanField(db_column='SCARS_RIGHT')),
                ('other_tags', models.CharField(blank=True, db_column='OTHER_TAGS', max_length=255, null=True)),
                ('other_tags_identification_type', models.CharField(blank=True, db_column='OTHER_TAGS_IDENTIFICATION_TYPE', max_length=10, null=True)),
                ('scars_left_scale_1', models.BooleanField(db_column='SCARS_LEFT_SCALE_1')),
                ('scars_left_scale_2', models.BooleanField(db_column='SCARS_LEFT_SCALE_2')),
                ('scars_left_scale_3', models.BooleanField(db_column='SCARS_LEFT_SCALE_3')),
                ('scars_right_scale_1', models.BooleanField(db_column='SCARS_RIGHT_SCALE_1')),
                ('scars_right_scale_2', models.BooleanField(db_column='SCARS_RIGHT_SCALE_2')),
                ('scars_right_scale_3', models.BooleanField(db_column='SCARS_RIGHT_SCALE_3')),
                ('cc_length_not_measured', models.BooleanField(db_column='CC_LENGTH_NOT_MEASURED')),
                ('cc_notch_length_not_measured', models.BooleanField(db_column='CC_NOTCH_LENGTH_NOT_MEASURED')),
                ('cc_width_not_measured', models.BooleanField(db_column='CC_WIDTH_NOT_MEASURED')),
                ('tagscarnotchecked', models.BooleanField(db_column='TAGSCARNOTCHECKED')),
                ('didnotcheckforinjury', models.BooleanField(db_column='DIDNOTCHECKFORINJURY')),
                ('comments', models.TextField(blank=True, db_column='COMMENTS', null=True)),
                ('error_number', models.IntegerField(blank=True, db_column='ERROR_NUMBER', null=True)),
                ('error_message', models.CharField(blank=True, db_column='ERROR_MESSAGE', max_length=255, null=True)),
                ('recapture_left_tag_id_3', models.CharField(blank=True, db_column='RECAPTURE_LEFT_TAG_ID_3', max_length=10, null=True)),
                ('recapture_right_tag_id_3', models.CharField(blank=True, db_column='RECAPTURE_RIGHT_TAG_ID_3', max_length=10, null=True)),
                ('body_part_3', models.CharField(blank=True, db_column='BODY_PART_3', max_length=1, null=True)),
                ('damage_code_3', models.CharField(blank=True, db_column='DAMAGE_CODE_3', max_length=1, null=True)),
                ('tissue_type_1', models.CharField(blank=True, db_column='TISSUE_TYPE_1', max_length=5, null=True)),
                ('sample_label_1', models.CharField(blank=True, db_column='SAMPLE_LABEL_1', max_length=50, null=True)),
                ('tissue_type_2', models.CharField(blank=True, db_column='TISSUE_TYPE_2', max_length=5, null=True)),
                ('sample_label_2', models.CharField(blank=True, db_column='SAMPLE_LABEL_2', max_length=50, null=True)),
                ('turtle_comments', models.CharField(blank=True, db_column='TURTLE_COMMENTS', max_length=255, null=True)),
                ('recapture_pit_tag_id_2', models.CharField(blank=True, db_column='RECAPTURE_PIT_TAG_ID_2', max_length=50, null=True)),
                ('new_pit_tag_id_2', models.CharField(blank=True, db_column='NEW_PIT_TAG_ID_2', max_length=50, null=True)),
            ],
            options={
                'db_table': 'TRT_DATA_ENTRY',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDataEntryExceptions',
            fields=[
                ('entry_batch_id', models.IntegerField(db_column='ENTRY_BATCH_ID', primary_key=True, serialize=False)),
                ('data_entry_id', models.IntegerField(db_column='DATA_ENTRY_ID')),
                ('turtle_id', models.IntegerField(blank=True, db_column='TURTLE_ID', null=True)),
                ('observation_id', models.IntegerField(blank=True, db_column='OBSERVATION_ID', null=True)),
                ('recapture_left_tag_id', models.CharField(blank=True, db_column='RECAPTURE_LEFT_TAG_ID', max_length=10, null=True)),
                ('recapture_right_tag_id', models.CharField(blank=True, db_column='RECAPTURE_RIGHT_TAG_ID', max_length=10, null=True)),
                ('recapture_left_tag_id_2', models.CharField(blank=True, db_column='RECAPTURE_LEFT_TAG_ID_2', max_length=10, null=True)),
                ('recapture_right_tag_id_2', models.CharField(blank=True, db_column='RECAPTURE_RIGHT_TAG_ID_2', max_length=10, null=True)),
                ('other_left_tag', models.CharField(blank=True, db_column='OTHER_LEFT_TAG', max_length=2, null=True)),
                ('other_right_tag', models.CharField(blank=True, db_column='OTHER_RIGHT_TAG', max_length=2, null=True)),
                ('new_left_tag_id', models.CharField(blank=True, db_column='NEW_LEFT_TAG_ID', max_length=10, null=True)),
                ('new_right_tag_id', models.CharField(blank=True, db_column='NEW_RIGHT_TAG_ID', max_length=10, null=True)),
                ('alive', models.CharField(blank=True, db_column='ALIVE', max_length=1, null=True)),
                ('place_code', models.CharField(blank=True, db_column='PLACE_CODE', max_length=4, null=True)),
                ('observation_date', models.DateTimeField(blank=True, db_column='OBSERVATION_DATE', null=True)),
                ('observation_time', models.DateTimeField(blank=True, db_column='OBSERVATION_TIME', null=True)),
                ('nesting', models.CharField(blank=True, db_column='NESTING', max_length=1, null=True)),
                ('species_code', models.CharField(blank=True, db_column='SPECIES_CODE', max_length=2, null=True)),
                ('identification_confidence', models.CharField(blank=True, db_column='IDENTIFICATION_CONFIDENCE', max_length=1, null=True)),
                ('sex', models.CharField(blank=True, db_column='SEX', max_length=1, null=True)),
                ('curved_carapace_length', models.IntegerField(blank=True, db_column='CURVED_CARAPACE_LENGTH', null=True)),
                ('curved_carapace_width', models.IntegerField(blank=True, db_column='CURVED_CARAPACE_WIDTH', null=True)),
                ('activity_code', models.CharField(blank=True, db_column='ACTIVITY_CODE', max_length=1, null=True)),
                ('beach_position_code', models.CharField(blank=True, db_column='BEACH_POSITION_CODE', max_length=2, null=True)),
                ('damage_carapace', models.CharField(blank=True, db_column='DAMAGE_CARAPACE', max_length=1, null=True)),
                ('damage_lff', models.CharField(blank=True, db_column='DAMAGE_LFF', max_length=1, null=True)),
                ('damage_rff', models.CharField(blank=True, db_column='DAMAGE_RFF', max_length=1, null=True)),
                ('damage_lhf', models.CharField(blank=True, db_column='DAMAGE_LHF', max_length=1, null=True)),
                ('damage_rhf', models.CharField(blank=True, db_column='DAMAGE_RHF', max_length=1, null=True)),
                ('clutch_completed', models.CharField(blank=True, db_column='CLUTCH_COMPLETED', max_length=1, null=True)),
                ('egg_count', models.IntegerField(blank=True, db_column='EGG_COUNT', null=True)),
                ('egg_count_method', models.CharField(blank=True, db_column='EGG_COUNT_METHOD', max_length=3, null=True)),
                ('measured_by', models.CharField(blank=True, db_column='MEASURED_BY', max_length=50, null=True)),
                ('recorded_by', models.CharField(blank=True, db_column='RECORDED_BY', max_length=50, null=True)),
                ('tagged_by', models.CharField(blank=True, db_column='TAGGED_BY', max_length=50, null=True)),
                ('measurement_type_1', models.CharField(blank=True, db_column='MEASUREMENT_TYPE_1', max_length=10, null=True)),
                ('measurement_value_1', models.FloatField(blank=True, db_column='MEASUREMENT_VALUE_1', null=True)),
                ('measurement_type_2', models.CharField(blank=True, db_column='MEASUREMENT_TYPE_2', max_length=10, null=True)),
                ('measurement_value_2', models.FloatField(blank=True, db_column='MEASUREMENT_VALUE_2', null=True)),
                ('datum_code', models.CharField(blank=True, db_column='DATUM_CODE', max_length=5, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('latitude_degrees', models.IntegerField(blank=True, db_column='LATITUDE_DEGREES', null=True)),
                ('latitude_minutes', models.FloatField(blank=True, db_column='LATITUDE_MINUTES', null=True)),
                ('latitude_seconds', models.FloatField(blank=True, db_column='LATITUDE_SECONDS', null=True)),
                ('longitude_degrees', models.IntegerField(blank=True, db_column='LONGITUDE_DEGREES', null=True)),
                ('longitude_minutes', models.FloatField(blank=True, db_column='LONGITUDE_MINUTES', null=True)),
                ('longitude_seconds', models.FloatField(blank=True, db_column='LONGITUDE_SECONDS', null=True)),
                ('zone', models.IntegerField(blank=True, db_column='ZONE', null=True)),
                ('easting', models.FloatField(blank=True, db_column='EASTING', null=True)),
                ('northing', models.FloatField(blank=True, db_column='NORTHING', null=True)),
                ('identification_type', models.CharField(blank=True, db_column='IDENTIFICATION_TYPE', max_length=10, null=True)),
                ('identifier', models.CharField(blank=True, db_column='IDENTIFIER', max_length=20, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_DATA_ENTRY_EXCEPTIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDataEntryPersons',
            fields=[
                ('data_entry_person_id', models.AutoField(db_column='DATA_ENTRY_PERSON_ID', primary_key=True, serialize=False)),
                ('person_name', models.CharField(db_column='PERSON_NAME', max_length=100)),
                ('person_id', models.IntegerField(blank=True, db_column='PERSON_ID', null=True)),
            ],
            options={
                'db_table': 'TRT_DATA_ENTRY_PERSONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDatumCodes',
            fields=[
                ('datum_code', models.CharField(db_column='DATUM_CODE', max_length=5, primary_key=True, serialize=False)),
                ('datum_description', models.CharField(blank=True, db_column='DATUM_DESCRIPTION', max_length=50, null=True)),
                ('semi_major_axis', models.FloatField(blank=True, db_column='SEMI_MAJOR_AXIS', null=True)),
                ('inverse_flattening', models.FloatField(blank=True, db_column='INVERSE_FLATTENING', null=True)),
            ],
            options={
                'db_table': 'TRT_DATUM_CODES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDefault',
            fields=[
                ('id', models.CharField(db_column='ID', max_length=10, primary_key=True, serialize=False)),
                ('dataentry_exportpath', models.CharField(db_column='DataEntry_ExportPath', max_length=200)),
                ('dataentry_sourcedatabase', models.CharField(blank=True, db_column='DataEntry_SourceDatabase', max_length=200, null=True)),
            ],
            options={
                'db_table': 'TRT_DEFAULT',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDocuments',
            fields=[
                ('document_id', models.AutoField(db_column='DOCUMENT_ID', primary_key=True, serialize=False)),
                ('document_type', models.CharField(db_column='DOCUMENT_TYPE', max_length=10)),
                ('filename', models.CharField(blank=True, db_column='FILENAME', max_length=255, null=True)),
                ('turtle_id', models.IntegerField(blank=True, db_column='TURTLE_ID', null=True)),
                ('person_id', models.IntegerField(blank=True, db_column='PERSON_ID', null=True)),
                ('species_code', models.CharField(blank=True, db_column='SPECIES_CODE', max_length=2, null=True)),
                ('title', models.CharField(blank=True, db_column='TITLE', max_length=255, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_DOCUMENTS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDocumentTypes',
            fields=[
                ('document_type', models.CharField(db_column='DOCUMENT_TYPE', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_DOCUMENT_TYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtEggCountMethods',
            fields=[
                ('egg_count_method', models.CharField(db_column='EGG_COUNT_METHOD', max_length=3, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_EGG_COUNT_METHODS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtEntryBatches',
            fields=[
                ('entry_batch_id', models.AutoField(db_column='ENTRY_BATCH_ID', primary_key=True, serialize=False)),
                ('entry_date', models.DateTimeField(blank=True, db_column='ENTRY_DATE', null=True)),
                ('entered_person_id', models.IntegerField(blank=True, db_column='ENTERED_PERSON_ID', null=True)),
                ('filename', models.CharField(blank=True, db_column='FILENAME', max_length=255, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('pr_date_convention', models.BooleanField(db_column='PR_DATE_CONVENTION')),
            ],
            options={
                'db_table': 'TRT_ENTRY_BATCHES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtIdentificationTypes',
            fields=[
                ('identification_type', models.CharField(db_column='IDENTIFICATION_TYPE', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_IDENTIFICATION_TYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtLocations',
            fields=[
                ('location_code', models.CharField(db_column='LOCATION_CODE', max_length=2, primary_key=True, serialize=False)),
                ('location_name', models.CharField(db_column='LOCATION_NAME', max_length=50)),
            ],
            options={
                'db_table': 'TRT_LOCATIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtMeasurementTypes',
            fields=[
                ('measurement_type', models.CharField(db_column='MEASUREMENT_TYPE', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=100)),
                ('measurement_units', models.CharField(blank=True, db_column='MEASUREMENT_UNITS', max_length=10, null=True)),
                ('minimum_value', models.FloatField(blank=True, db_column='MINIMUM_VALUE', null=True)),
                ('maximum_value', models.FloatField(blank=True, db_column='MAXIMUM_VALUE', null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_MEASUREMENT_TYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtNesting',
            fields=[
                ('place_code', models.CharField(db_column='PLACE_CODE', max_length=4, primary_key=True, serialize=False)),
                ('species_code', models.CharField(db_column='SPECIES_CODE', max_length=2)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_NESTING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtNestingSeason',
            fields=[
                ('nesting_seasonid', models.AutoField(db_column='NESTING_SEASONID', primary_key=True, serialize=False)),
                ('nesting_season', models.CharField(db_column='NESTING_SEASON', max_length=20)),
                ('startdate', models.DateTimeField(db_column='STARTDATE')),
                ('enddate', models.DateTimeField(db_column='ENDDATE')),
            ],
            options={
                'db_table': 'TRT_NESTING_SEASON',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtObservations',
            fields=[
                ('observation_id', models.AutoField(db_column='OBSERVATION_ID', primary_key=True, serialize=False)),
                ('observation_date', models.DateTimeField(db_column='OBSERVATION_DATE')),
                ('observation_time', models.DateTimeField(blank=True, db_column='OBSERVATION_TIME', null=True)),
                ('observation_date_old', models.DateTimeField(blank=True, db_column='OBSERVATION_DATE_OLD', null=True)),
                ('alive', models.CharField(blank=True, db_column='ALIVE', max_length=1, null=True)),
                ('place_description', models.CharField(blank=True, db_column='PLACE_DESCRIPTION', max_length=300, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('latitude_degrees', models.IntegerField(blank=True, db_column='LATITUDE_DEGREES', null=True)),
                ('latitude_minutes', models.FloatField(blank=True, db_column='LATITUDE_MINUTES', null=True)),
                ('latitude_seconds', models.FloatField(blank=True, db_column='LATITUDE_SECONDS', null=True)),
                ('longitude_degrees', models.IntegerField(blank=True, db_column='LONGITUDE_DEGREES', null=True)),
                ('longitude_minutes', models.FloatField(blank=True, db_column='LONGITUDE_MINUTES', null=True)),
                ('longitude_seconds', models.FloatField(blank=True, db_column='LONGITUDE_SECONDS', null=True)),
                ('zone', models.IntegerField(blank=True, db_column='ZONE', null=True)),
                ('easting', models.FloatField(blank=True, db_column='EASTING', null=True)),
                ('northing', models.FloatField(blank=True, db_column='NORTHING', null=True)),
                ('nesting', models.CharField(blank=True, db_column='NESTING', max_length=1, null=True)),
                ('clutch_completed', models.CharField(blank=True, db_column='CLUTCH_COMPLETED', max_length=1, null=True)),
                ('number_of_eggs', models.SmallIntegerField(blank=True, db_column='NUMBER_OF_EGGS', null=True)),
                ('measurements', models.CharField(db_column='MEASUREMENTS', max_length=1)),
                ('action_taken', models.CharField(blank=True, db_column='ACTION_TAKEN', max_length=255, null=True)),
                ('comments', models.TextField(blank=True, db_column='COMMENTS', null=True)),
                ('entered_by', models.CharField(blank=True, db_column='ENTERED_BY', max_length=50, null=True)),
                ('date_entered', models.DateTimeField(blank=True, db_column='DATE_ENTERED', null=True)),
                ('original_observation_id', models.IntegerField(blank=True, db_column='ORIGINAL_OBSERVATION_ID', null=True)),
                ('comment_fromrecordedtagstable', models.TextField(blank=True, db_column='COMMENT_FROMRECORDEDTAGSTABLE', null=True)),
                ('scars_left', models.BooleanField(db_column='SCARS_LEFT')),
                ('scars_right', models.BooleanField(db_column='SCARS_RIGHT')),
                ('other_tags', models.CharField(blank=True, db_column='OTHER_TAGS', max_length=255, null=True)),
                ('transferid', models.IntegerField(blank=True, db_column='TransferID', null=True)),
                ('mund', models.BooleanField(db_column='Mund')),
                ('scars_left_scale_1', models.BooleanField(db_column='SCARS_LEFT_SCALE_1')),
                ('scars_left_scale_2', models.BooleanField(db_column='SCARS_LEFT_SCALE_2')),
                ('scars_left_scale_3', models.BooleanField(db_column='SCARS_LEFT_SCALE_3')),
                ('scars_right_scale_1', models.BooleanField(db_column='SCARS_RIGHT_SCALE_1')),
                ('scars_right_scale_2', models.BooleanField(db_column='SCARS_RIGHT_SCALE_2')),
                ('scars_right_scale_3', models.BooleanField(db_column='SCARS_RIGHT_SCALE_3')),
                ('cc_length_not_measured', models.BooleanField(db_column='CC_LENGTH_Not_Measured')),
                ('cc_notch_length_not_measured', models.BooleanField(db_column='CC_NOTCH_LENGTH_Not_Measured')),
                ('cc_width_not_measured', models.BooleanField(db_column='CC_WIDTH_Not_Measured')),
                ('tagscarnotchecked', models.BooleanField(db_column='TagScarNotChecked')),
                ('didnotcheckforinjury', models.BooleanField(db_column='DidNotCheckForInjury')),
                ('date_convention', models.CharField(db_column='DATE_CONVENTION', max_length=1)),
                ('observation_status', models.CharField(blank=True, db_column='OBSERVATION_STATUS', max_length=50, null=True)),
                ('corrected_date', models.DateTimeField(blank=True, db_column='CORRECTED_DATE', null=True)),
            ],
            options={
                'verbose_name': 'Observation',
                'db_table': 'TRT_OBSERVATIONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtPersons',
            fields=[
                ('person_id', models.AutoField(db_column='PERSON_ID', primary_key=True, serialize=False)),
                ('first_name', models.CharField(db_column='FIRST_NAME', max_length=50)),
                ('middle_name', models.CharField(blank=True, db_column='MIDDLE_NAME', max_length=50, null=True)),
                ('surname', models.CharField(blank=True, db_column='SURNAME', max_length=50, null=True)),
                ('specialty', models.CharField(blank=True, db_column='SPECIALTY', max_length=255, null=True)),
                ('address_line_1', models.CharField(blank=True, db_column='ADDRESS_LINE_1', max_length=255, null=True)),
                ('address_line_2', models.CharField(blank=True, db_column='ADDRESS_LINE_2', max_length=255, null=True)),
                ('town', models.CharField(blank=True, db_column='TOWN', max_length=50, null=True)),
                ('state', models.CharField(blank=True, db_column='STATE', max_length=10, null=True)),
                ('post_code', models.CharField(blank=True, db_column='POST_CODE', max_length=10, null=True)),
                ('country', models.CharField(blank=True, db_column='COUNTRY', max_length=50, null=True)),
                ('telephone', models.CharField(blank=True, db_column='TELEPHONE', max_length=20, null=True)),
                ('fax', models.CharField(blank=True, db_column='FAX', max_length=20, null=True)),
                ('mobile', models.CharField(blank=True, db_column='MOBILE', max_length=20, null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=150, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=400, null=True)),
                ('transfer', models.CharField(blank=True, db_column='Transfer', max_length=50, null=True)),
                ('recorder', models.BooleanField(db_column='Recorder')),
            ],
            options={
                'db_table': 'TRT_PERSONS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtPitTags',
            fields=[
                ('pit_tag_id', models.CharField(db_column='PIT_TAG_ID', max_length=50, primary_key=True, serialize=False)),
                ('issue_location', models.CharField(blank=True, db_column='ISSUE_LOCATION', max_length=50, null=True)),
                ('custodian_person_id', models.IntegerField(blank=True, db_column='CUSTODIAN_PERSON_ID', null=True)),
                ('return_date', models.DateTimeField(blank=True, db_column='RETURN_DATE', null=True)),
                ('return_condition', models.CharField(blank=True, db_column='RETURN_CONDITION', max_length=50, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('field_person_id', models.IntegerField(blank=True, db_column='FIELD_PERSON_ID', null=True)),
                ('tag_order_id', models.IntegerField(blank=True, db_column='TAG_ORDER_ID', null=True)),
                ('batch_number', models.CharField(blank=True, db_column='BATCH_NUMBER', max_length=50, null=True)),
                ('box_number', models.CharField(blank=True, db_column='BOX_NUMBER', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Pit tag',
                'db_table': 'TRT_PIT_TAGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtPitTagStates',
            fields=[
                ('pit_tag_state', models.CharField(db_column='PIT_TAG_STATE', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('existing_tag_list', models.BooleanField(db_column='EXISTING_TAG_LIST')),
                ('new_tag_list', models.BooleanField(db_column='NEW_TAG_LIST')),
            ],
            options={
                'db_table': 'TRT_PIT_TAG_STATES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtPitTagStatus',
            fields=[
                ('pit_tag_status', models.CharField(db_column='PIT_TAG_STATUS', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_PIT_TAG_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtPlaces',
            fields=[
                ('place_code', models.CharField(db_column='PLACE_CODE', max_length=4, primary_key=True, serialize=False)),
                ('place_name', models.CharField(blank=True, db_column='PLACE_NAME', max_length=50, null=True)),
                ('location_code', models.CharField(db_column='LOCATION_CODE', max_length=2)),
                ('rookery', models.CharField(blank=True, db_column='ROOKERY', max_length=1, null=True)),
                ('beach_approach', models.CharField(blank=True, db_column='BEACH_APPROACH', max_length=50, null=True)),
                ('aspect', models.CharField(blank=True, db_column='ASPECT', max_length=3, null=True)),
                ('datum_code', models.CharField(blank=True, db_column='DATUM_CODE', max_length=5, null=True)),
                ('latitude', models.FloatField(blank=True, db_column='LATITUDE', null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_PLACES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtRecordedIdentification',
            fields=[
                ('recorded_identification_id', models.AutoField(db_column='RECORDED_IDENTIFICATION_ID', primary_key=True, serialize=False)),
                ('observation_id', models.IntegerField(db_column='OBSERVATION_ID')),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_RECORDED_IDENTIFICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtRecordedPitTags',
            fields=[
                ('recorded_pit_tag_id', models.AutoField(db_column='RECORDED_PIT_TAG_ID', primary_key=True, serialize=False)),
                ('observation_id', models.IntegerField(db_column='OBSERVATION_ID')),
                ('pit_tag_id', models.CharField(db_column='PIT_TAG_ID', max_length=50)),
                ('pit_tag_position', models.CharField(blank=True, db_column='PIT_TAG_POSITION', max_length=10, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('turtle_id', models.IntegerField(db_column='TURTLE_ID')),
                ('checked', models.BooleanField(db_column='Checked')),
            ],
            options={
                'db_table': 'TRT_RECORDED_PIT_TAGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtRecordedTags',
            fields=[
                ('recorded_tag_id', models.AutoField(db_column='RECORDED_TAG_ID', primary_key=True, serialize=False)),
                ('observation_id', models.IntegerField(db_column='OBSERVATION_ID')),
                ('tag_id', models.CharField(db_column='TAG_ID', max_length=10)),
                ('other_tag_id', models.CharField(blank=True, db_column='OTHER_TAG_ID', max_length=10, null=True)),
                ('side', models.CharField(blank=True, db_column='SIDE', max_length=1, null=True)),
                ('tag_state', models.CharField(blank=True, db_column='TAG_STATE', max_length=10, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('tag_position', models.SmallIntegerField(blank=True, db_column='TAG_POSITION', null=True)),
                ('barnacles', models.BooleanField(db_column='BARNACLES')),
                ('turtle_id', models.IntegerField(db_column='TURTLE_ID')),
            ],
            options={
                'db_table': 'TRT_RECORDED_TAGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtSamples',
            fields=[
                ('sample_id', models.AutoField(db_column='SAMPLE_ID', primary_key=True, serialize=False)),
                ('sample_date', models.DateTimeField(blank=True, db_column='SAMPLE_DATE', null=True)),
                ('arsenic', models.FloatField(blank=True, db_column='ARSENIC', null=True)),
                ('selenium', models.FloatField(blank=True, db_column='SELENIUM', null=True)),
                ('zinc', models.FloatField(blank=True, db_column='ZINC', null=True)),
                ('cadmium', models.FloatField(blank=True, db_column='CADMIUM', null=True)),
                ('copper', models.FloatField(blank=True, db_column='COPPER', null=True)),
                ('lead', models.FloatField(blank=True, db_column='LEAD', null=True)),
                ('mercury', models.FloatField(blank=True, db_column='MERCURY', null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('observation_id', models.IntegerField(blank=True, db_column='OBSERVATION_ID', null=True)),
                ('sample_label', models.CharField(blank=True, db_column='SAMPLE_LABEL', max_length=50, null=True)),
            ],
            options={
                'db_table': 'TRT_SAMPLES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtSighting',
            fields=[
                ('sightingid', models.AutoField(db_column='SIGHTINGID', primary_key=True, serialize=False)),
                ('observation_time', models.DateTimeField(blank=True, db_column='OBSERVATION_TIME', null=True)),
                ('observation_date', models.DateTimeField(blank=True, db_column='OBSERVATION_DATE', null=True)),
                ('alive', models.CharField(blank=True, db_column='ALIVE', max_length=1, null=True)),
                ('species_code', models.CharField(blank=True, db_column='SPECIES_CODE', max_length=2, null=True)),
                ('sex', models.CharField(blank=True, db_column='SEX', max_length=1, null=True)),
                ('location_code', models.CharField(blank=True, db_column='LOCATION_CODE', max_length=2, null=True)),
                ('turtle_status', models.CharField(blank=True, db_column='TURTLE_STATUS', max_length=1, null=True)),
                ('place_code', models.CharField(blank=True, db_column='PLACE_CODE', max_length=4, null=True)),
                ('activity_code', models.CharField(blank=True, db_column='ACTIVITY_CODE', max_length=2, null=True)),
                ('beach_position_code', models.CharField(blank=True, db_column='BEACH_POSITION_CODE', max_length=2, null=True)),
                ('datum_code', models.CharField(blank=True, db_column='DATUM_CODE', max_length=5, null=True)),
                ('latitude', models.CharField(blank=True, db_column='LATITUDE', max_length=7, null=True)),
                ('longitude', models.FloatField(blank=True, db_column='LONGITUDE', null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('entered_by_person_id', models.IntegerField(blank=True, db_column='ENTERED_BY_PERSON_ID', null=True)),
            ],
            options={
                'db_table': 'TRT_SIGHTING',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtSpecies',
            fields=[
                ('species_code', models.CharField(db_column='SPECIES_CODE', max_length=2, primary_key=True, serialize=False)),
                ('scientific_name', models.CharField(blank=True, db_column='SCIENTIFIC_NAME', max_length=50, null=True)),
                ('common_name', models.CharField(blank=True, db_column='COMMON_NAME', max_length=50, null=True)),
                ('old_species_code', models.CharField(blank=True, db_column='OLD_SPECIES_CODE', max_length=2, null=True)),
                ('hide_dataentry', models.BooleanField(db_column='Hide_DataEntry')),
            ],
            options={
                'db_table': 'TRT_SPECIES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTagOrders',
            fields=[
                ('tag_order_id', models.AutoField(db_column='TAG_ORDER_ID', primary_key=True, serialize=False)),
                ('order_date', models.DateTimeField(blank=True, db_column='ORDER_DATE', null=True)),
                ('order_number', models.CharField(db_column='ORDER_NUMBER', max_length=20)),
                ('tag_prefix', models.CharField(blank=True, db_column='TAG_PREFIX', max_length=10, null=True)),
                ('start_tag_number', models.IntegerField(blank=True, db_column='START_TAG_NUMBER', null=True)),
                ('end_tag_number', models.IntegerField(blank=True, db_column='END_TAG_NUMBER', null=True)),
                ('total_tags', models.SmallIntegerField(blank=True, db_column='TOTAL_TAGS', null=True)),
                ('date_received', models.DateTimeField(blank=True, db_column='DATE_RECEIVED', null=True)),
                ('paid_by', models.CharField(blank=True, db_column='PAID_BY', max_length=255, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_TAG_ORDERS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTags',
            fields=[
                ('tag_id', models.CharField(db_column='TAG_ID', max_length=10, primary_key=True, serialize=False)),
                ('tag_order_id', models.IntegerField(blank=True, db_column='TAG_ORDER_ID', null=True)),
                ('issue_location', models.CharField(blank=True, db_column='ISSUE_LOCATION', max_length=50, null=True)),
                ('custodian_person_id', models.IntegerField(blank=True, db_column='CUSTODIAN_PERSON_ID', null=True)),
                ('side', models.CharField(blank=True, db_column='SIDE', max_length=1, null=True)),
                ('return_date', models.DateTimeField(blank=True, db_column='RETURN_DATE', null=True)),
                ('return_condition', models.CharField(blank=True, db_column='RETURN_CONDITION', max_length=50, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('field_person_id', models.IntegerField(blank=True, db_column='FIELD_PERSON_ID', null=True)),
            ],
            options={
                'verbose_name': 'Flipper tag',
                'db_table': 'TRT_TAGS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTagStates',
            fields=[
                ('tag_state', models.CharField(db_column='TAG_STATE', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
                ('tag_status', models.CharField(blank=True, db_column='TAG_STATUS', max_length=10, null=True)),
                ('existing_tag_list', models.BooleanField(db_column='EXISTING_TAG_LIST')),
                ('new_tag_list', models.BooleanField(db_column='NEW_TAG_LIST')),
            ],
            options={
                'db_table': 'TRT_TAG_STATES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTagStatus',
            fields=[
                ('tag_status', models.CharField(db_column='TAG_STATUS', max_length=10, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_TAG_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTissueTypes',
            fields=[
                ('tissue_type', models.CharField(db_column='TISSUE_TYPE', max_length=5, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=50)),
            ],
            options={
                'db_table': 'TRT_TISSUE_TYPES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTurtles',
            fields=[
                ('turtle_id', models.IntegerField(db_column='TURTLE_ID', primary_key=True, serialize=False)),
                ('identification_confidence', models.CharField(blank=True, db_column='IDENTIFICATION_CONFIDENCE', max_length=1, null=True)),
                ('sex', models.CharField(db_column='SEX', max_length=1)),
                ('re_entered_population', models.CharField(blank=True, db_column='RE_ENTERED_POPULATION', max_length=1, null=True)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
                ('entered_by', models.CharField(blank=True, db_column='ENTERED_BY', max_length=50, null=True)),
                ('date_entered', models.DateTimeField(blank=True, db_column='DATE_ENTERED', null=True)),
                ('original_turtle_id', models.IntegerField(blank=True, db_column='ORIGINAL_TURTLE_ID', null=True)),
                ('entry_batch_id', models.IntegerField(blank=True, db_column='ENTRY_BATCH_ID', null=True)),
                ('tag', models.CharField(blank=True, db_column='Tag', max_length=255, null=True)),
                ('mund_id', models.CharField(blank=True, db_column='Mund_ID', max_length=255, null=True)),
                ('turtle_name', models.CharField(blank=True, db_column='TURTLE_NAME', max_length=50, null=True)),
            ],
            options={
                'verbose_name': 'Turtle',
                'db_table': 'TRT_TURTLES',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtTurtleStatus',
            fields=[
                ('turtle_status', models.CharField(db_column='TURTLE_STATUS', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=100)),
                ('new_tag_list', models.BooleanField(db_column='NEW_TAG_LIST')),
            ],
            options={
                'db_table': 'TRT_TURTLE_STATUS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtYesNo',
            fields=[
                ('code', models.CharField(db_column='CODE', max_length=1, primary_key=True, serialize=False)),
                ('description', models.CharField(db_column='DESCRIPTION', max_length=10)),
            ],
            options={
                'db_table': 'TRT_YES_NO',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtDamage',
            fields=[
                ('observation', models.OneToOneField(db_column='OBSERVATION_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='wamtram2.trtobservations')),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_DAMAGE',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtIdentification',
            fields=[
                ('turtle', models.OneToOneField(db_column='TURTLE_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='wamtram2.trtturtles')),
                ('identifier', models.CharField(db_column='IDENTIFIER', max_length=20)),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_IDENTIFICATION',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TrtMeasurements',
            fields=[
                ('observation', models.OneToOneField(db_column='OBSERVATION_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='wamtram2.trtobservations')),
                ('measurement_value', models.FloatField(db_column='MEASUREMENT_VALUE')),
                ('comments', models.CharField(blank=True, db_column='COMMENTS', max_length=255, null=True)),
            ],
            options={
                'db_table': 'TRT_MEASUREMENTS',
                'managed': False,
            },
        ),
    ]
